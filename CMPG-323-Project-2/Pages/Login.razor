@page "/"

@using Microsoft.Extensions.Configuration
@using DataLibrary
@using CMPG_323_Project_2.Models
@inject IDataAccess _data
@inject IConfiguration _config
@inject NavigationManager Nav

<body style="background-image: linear-gradient(180deg, rgb(118, 245, 232) 40%, rgb(56, 255, 162) 70%); ">

    @if (users == null)
    {
        <p><em>Loading... </em></p>
    }
    <style>
        div {
            margin-bottom: 10px;
            font: bold;
        }

        label {
            display: inline-block;
            width: 90px;
            text-align: left;
            font-weight: bold;
        }
    </style>

    @if (YES == true)
    {
        <h1>YESSSSSSSSSSSSSS</h1>
        <br />
    }

    @if (showlogin)
    {
<div id="loginDiv">
    <h1>LOGIN</h1>
    <label for="User">Username :</label> &nbsp
    <input type="text" @bind-value="user.Username" />
    <br />
    <label for="Pass"> Password :</label> &nbsp
    <input type="password" @bind-value="user.Password"/>
    <br />
    @if (incorrect)
    {
        <label style="color : red">Username or password is Incorrect</label>
    }

    <button @onclick="TryLogin" id="btnlogin" class="btn btn-primary"> Login </button>
    <button @onclick="TrySignup" id="btnsignup" class="btn btn-primary"> Sign up </button>
    <p></p>
    <br />
    <br />
    <br />
    <br />
    <br />
</div>
    }
    @if (showsignup)
    {
        <EditForm Model="@user" OnValidSubmit="@InsertUser">
            <DataAnnotationsValidator />
            <h1>Sign up</h1>
            <ValidationSummary />
            <div id="SignupDiv" style="vertical-align:auto">

                <br />
                <label for="User">Username:</label>&nbsp
                <input id="textuser" @bind-value="user.Username" /><br />
                <label for="email">E-mail adress:</label>&nbsp
                <input type="email" id="textemail" @bind-value="user.Email" /><br />
                <label for="Birth">Date of birth:</label>&nbsp
                <input type="text" @bind-value="user.DOB" placeholder="YYYY-MM-DD"/><br />
                <label for="Pass">Password:</label>&nbsp
                <input type="password" id="btnpass" @bind-value="user.Password" /><br />
                <label for="ConPass">Confirm Password:</label>&nbsp
                <input type="password" id="btnconpass" @bind-value="user.confirmpass" /><br />
                <button type="submit" class="btn btn-primary">Sign up</button>
                <button @onclick="cancel" class="btn btn-primary">Cancel</button>
            </div>
        </EditForm>
        
    }

</body>

@code {
    UsersModel user = new UsersModel();

    List<UsersModel> users;
    private bool showsignup = false;
    private bool showlogin = true;
    private bool YES = false;
    public static string Name;
    public static string Profilepic;
    private bool incorrect;


    protected override async Task OnInitializedAsync()
    {
        string sql2 = "select * from useraccount";
        users = await _data.LoadData<UsersModel, dynamic>(sql2, new { }, _config.GetConnectionString("default"));

    }

    private async Task InsertUser()
    {


        string sql = "insert into useraccount (Username, Password, Email, DOB) values (@Username, @Password, @Email, @Age); ";

        await _data.SaveData(sql, new { Username = user.Username, Password = user.Password, Email = user.Email, Age = user.DOB }, _config.GetConnectionString("default"));
    }

    void TryLogin()
    {


        foreach (var u in users)
        {
            if (u.Username == user.Username && u.Password == user.Password)
            {
                incorrect = false;
                Name = u.Username;
                Profilepic = u.Profilepicture;
                Nav.NavigateTo("/main");
            }
            else
            {
                incorrect = true;
                
            }
        }
    }

    void TrySignup()
    {
        showsignup = true;
        showlogin = false;
    }

    void cancel()
    {
        showsignup = false;
        showlogin = true;
    }
}
